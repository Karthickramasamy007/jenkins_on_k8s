pipeline {

    agent any

    // triggers {
    //     pollSCM('*/5 * * * 1-5')
    // }

    /*
        The options block is used to specify various global options that affect the behavior of the entire pipeline or stages within the pipeline
    */
    options {
        timeout(time: 1, unit: 'HOURS') // Global timeout for the entire pipeline
        buildDiscarder(logRotator(numToKeepStr: '10')) // Limit the number of builds kept
        timestamps() // Add timestamps to build output
        skipStagesAfterUnstable() // Skip remaining stages if a stage becomes unstable
        // environment { // Set environment variables
        //     MY_ENV_VAR = 'example_value'
        // }
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code from version control
                //checkout scm 
                sh 'echo hello checkout V0.1.2'
            }
        }

        stage('Branch Name Validation') {
            steps {
                script {
                    def allowedBranchPatterns = ['main', 'PR-.*']
                    def currentBranch = env.BRANCH_NAME

                    def isValidBranch = allowedBranchPatterns.any { pattern ->
                        currentBranch =~ pattern
                    }

                    if (!isValidBranch) {
                        error "Invalid branch name: ${currentBranch}. Allowed patterns: ${allowedBranchPatterns.join(', ')}"
                    }
                }
            }
        }

        stage('Execute only for the PR-* branch'){
            when {
                branch "PR-*"
            }
            steps{
                sh "echo hello PR-* branch $branch"
            }
        }
        
        stage('Build') {
            steps {
                // Compile and build your Java application
                sh 'echo hello build'
            }
        }

        stage('Scan') {
            steps {
                // Compile and build your Java application
                sh 'echo hello scan'
            }
        }
        
        stage('Test') {
            steps {
                // Run tests for your Java application
                sh 'echo hello test'
            }
        }
        
        stage('Deploy') {
            steps {
                // Deploy your application to a server or container
               sh 'echo hello deploy'
            }
        }
    }
}
